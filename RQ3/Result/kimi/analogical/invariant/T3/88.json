[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_last(arr):\n    last_value = arr[0]\n    i = 0\n    while i < len(arr):\n        last_value = arr[i]\n        i += 1\n    return last_value"}, {"role": "assistant", "content": "def problem1(arr):\n    max_value = arr[0]\n    i = 0\n    while i < len(arr):\n        max_value = max(max_value, arr[i])\n        i += 1\n    return max_value\n\ndef problem2(arr):\n    min_value = arr[0]\n    i = 0\n    while i < len(arr):\n        min_value = min(min_value, arr[i])\n        i += 1\n    return min_value\n\ndef problem3(arr):\n    sum_value = 0\n    i = 0\n    while i < len(arr):\n        sum_value += arr[i]\n        i += 1\n    return sum_value\n\nTherefore, the final answer is: last_value = arr[0]->arr[i-1]"}, {"role": "user", "content": "def give_first(arr):\n    first_value = arr[-1]\n    i = len(arr)\n    while i > 0:\n        i -= 1\n        first_value = arr[i]\n    return first_value"}, {"role": "assistant", "content": "def problem1(arr):\n    max_value = arr[-1]\n    i = len(arr)\n    while i > 0:\n        i -= 1\n        max_value = max(max_value, arr[i])\n    return max_value\n\ndef problem2(arr):\n    min_value = arr[-1]\n    i = len(arr)\n    while i > 0:\n        i -= 1\n        min_value = min(min_value, arr[i])\n    return min_value\n\ndef problem3(arr):\n    sum_value = 0\n    i = len(arr)\n    while i > 0:\n        sum_value += arr[i-1]\n        i -= 1\n    return sum_value\n\nTherefore, the final answer is: first_value = arr[-1]->arr[i]"}]