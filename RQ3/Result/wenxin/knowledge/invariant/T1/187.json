[{"role": "user", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format without any additional text.)(Notice that for the same program, even if the loop condition changes from < len to <= len - 1, the loop invariant should remain unchanged.)"}, {"role": "assistant", "content": "OK."}, {"role": "user", "content": "def selection_sort(arr):\n    h = 0\n    while h < len(arr):\n        z = h + 1\n        while z < len(arr):\n            if arr[z] < arr[h]:\n                temp = arr[h]\n                arr[h] = arr[z]\n                arr[z] = temp\n            z += 1\n        h += 1\n    return arr"}, {"role": "assistant", "content": "The loop invariant for the i-th iteration of the selection sort algorithm is:\n\n`arr[i] <= arr[i+1] <= ... <= arr[h]`\n\nThis invariant ensures that the elements in the current sorted subarray are in ascending order. It is maintained by the selection sort algorithm as it iterates through the array.\n\nHere's an explanation of how the invariant is maintained:\n\n1. In the first iteration, `h` is set to 0, so `arr[h]` is the first element of the sorted subarray.\n2. In the inner while loop, if `arr[z]` is less than `arr[h]`, then it means that `arr[z]` should be placed before `arr[h]` in the sorted subarray. So, `arr[h]` and `arr[z]` are swapped, maintaining the invariant.\n3. After swapping, `arr[h]` becomes the new `arr[z]`, and `z` is incremented. This continues until `z` reaches the end of the array.\n4. After swapping and incrementing `h`, the outer while loop increments `h` as well.\n\nIn the next iteration, the process is repeated with a new 'start' index of `h+1`, ensuring that the sorted subarray is correctly updated.\n\nThe invariant ensures that the elements in the sorted subarray are in ascending order, which proves the partial correctness of the program."}, {"role": "user", "content": "def selection_sort(arr):\n    h = 0\n    while h <= len(arr) - 1:\n        z = h + 1\n        while z <= len(arr) - 1:\n            if arr[z] < arr[h]:\n                temp = arr[h]\n                arr[h] = arr[z]\n                arr[z] = temp\n            z += 1\n        h += 1\n    return arr"}, {"role": "assistant", "content": "\u8fd9\u6bb5\u4ee3\u7801\u662f\u5b9e\u73b0\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5\u7684Python\u51fd\u6570\u3002\u9009\u62e9\u6392\u5e8f\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u6bcf\u4e00\u6b21\u4ece\u5f85\u6392\u5e8f\u7684\u6570\u636e\u5143\u7d20\u4e2d\u9009\u51fa\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5b58\u653e\u5728\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u76f4\u5230\u5168\u90e8\u5f85\u6392\u5e8f\u7684\u6570\u636e\u5143\u7d20\u6392\u5b8c\u3002\n\n\u4f60\u5df2\u7ecf\u7ed9\u51fa\u4e86\u8fd9\u6bb5\u4ee3\u7801\u7684\u903b\u8f91\uff0c\u73b0\u5728\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u7684\u5faa\u73af\u4e0d\u53d8\u5f0f\uff1a\n\n\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u90fd\u6709\u4ee5\u4e0b\u4e0d\u53d8\u5f0f\u6210\u7acb\uff1a\n\n`arr[h] <= arr[h+1] <= ... <= arr[z-1] < arr[z]`\n\n\u8fd9\u4e2a\u4e0d\u53d8\u5f0f\u4fdd\u8bc1\u4e86\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c`arr[h]` \u662f\u5f53\u524d\u5df2\u6392\u5e8f\u90e8\u5206\u7684\u6700\u5c0f\u5143\u7d20\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u4e0d\u53d8\u5f0f\u662f\u5982\u4f55\u88ab\u7ef4\u62a4\u7684\uff1a\n\n* \u5728\u5916\u5c42\u5faa\u73af\u5f00\u59cb\u65f6\uff0c`h` \u521d\u59cb\u5316\u4e3a 0\uff0c\u6240\u4ee5 `arr[h]` \u662f\u5f53\u524d\u5df2\u6392\u5e8f\u90e8\u5206\u7684\u6700\u5c0f\u5143\u7d20\u3002\n* \u5728\u5185\u5c42\u5faa\u73af\u4e2d\uff0c\u5982\u679c `arr[z]` \u5c0f\u4e8e `arr[h]`\uff0c\u90a3\u4e48\u8bf4\u660e `arr[z]` \u5e94\u8be5\u88ab\u653e\u7f6e\u5728 `arr[h]` \u7684\u524d\u9762\uff0c\u6240\u4ee5\u5b83\u4eec\u88ab\u4ea4\u6362\u3002\u6b64\u65f6\uff0c`arr[h]` \u7684\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u800c `arr[z]` \u88ab\u79fb\u5230\u4e86\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u3002\u4ea4\u6362\u4e4b\u540e\uff0c\u65b0\u7684 `arr[z]` \u662f\u65b0\u7684\u6700\u5c0f\u5143\u7d20\u3002\n* \u5185\u5c42\u5faa\u73af\u5b8c\u6210\u540e\uff0c`z` \u4f1a\u7ee7\u7eed\u9012\u589e\uff0c\u5bfb\u627e\u4e0b\u4e00\u4e2a\u9700\u8981\u6392\u5e8f\u7684\u5143\u7d20\u3002\u5f53 `z` \u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u540e\uff0c\u6240\u6709\u5143\u7d20\u90fd\u5df2\u7ecf\u88ab\u6b63\u786e\u6392\u5e8f\u3002\n* \u5728\u5185\u5c42\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u5916\u5c42\u5faa\u73af\u4e2d\u7684 `h` \u4f1a\u9012\u589e\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u90e8\u5206\u3002\n\n\u56e0\u6b64\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u7684\u5faa\u73af\u4e0d\u53d8\u5f0f\u4fdd\u8bc1\u4e86\u9009\u62e9\u6392\u5e8f\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002"}]