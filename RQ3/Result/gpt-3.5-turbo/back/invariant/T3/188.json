[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first explain the fundamental principles involved in solving it, and then provide the answer to the problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    i = 0\n    while i < len(arr):\n        z = i + 1\n        while z < len(arr):\n            if arr[z] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[z]\n                arr[z] = temp\n            z += 1\n        i += 1\n    return arr"}, {"role": "assistant", "content": "To prove the partial correctness of the selection_sort function, we need to provide a loop invariant for the inner loop of the function. The inner loop is responsible for finding the smallest element in the unsorted portion of the array and swapping it with the element at index i.\n\nThe loop invariant for the i-th iteration of the inner loop should state that before the start of the i-th iteration, the subarray arr[0:i] is sorted in non-decreasing order.\n\nTherefore, the final answer is: 'z_value = arr[z] >= arr[i] for i < z <= len(arr)'"}, {"role": "user", "content": "def selection_sort(arr):\n    i = len(arr)\n    while i > 0:\n        i -= 1\n        z = i\n        while z > 0:\n            z -= 1\n            if arr[z] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[z]\n                arr[z] = temp\n    return arr"}, {"role": "assistant", "content": "To prove the partial correctness of the selection_sort function, we need to provide a loop invariant for the inner loop of the function. The inner loop is responsible for finding the largest element in the unsorted portion of the array and swapping it with the element at index i.\n\nThe loop invariant for the i-th iteration of the inner loop should state that after the i-th iteration, the subarray arr[len(arr) - i:len(arr)] contains the i largest elements of the array sorted in non-increasing order.\n\nTherefore, the final answer is: 'z_value = arr[z] >= arr[i] for i <= z < len(arr)'"}]