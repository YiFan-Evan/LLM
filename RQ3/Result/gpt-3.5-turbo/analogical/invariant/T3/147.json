[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    h = 0\n    while h < len(arr):\n        sum_value += arr[h]\n        h += 1\n    return sum_value"}, {"role": "assistant", "content": "Related Problem 1:\n**Problem Description:** \nConsider the following Python code snippet:\n\n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    i = 0\n    while i < len(arr):\n        if arr[i] > max_value:\n            max_value = arr[i]\n        i += 1\n    return max_value\n```\n\n**Solution:**\nWe have to prove the correctness of the `find_max` function by providing a loop invariant for the i-th iteration of the loop.\n\nRelated Problem 2:\n**Problem Description:** \nConsider the following Python code snippet:\n\n```python\ndef find_avg(arr):\n    total_sum = 0\n    j = 0\n    while j < len(arr):\n        total_sum += arr[j]\n        j += 1\n    avg_value = total_sum / len(arr)\n    return avg_value\n```\n\n**Solution:**\nWe have to prove the correctness of the `find_avg` function by providing a loop invariant for the j-th iteration of the loop.\n\nRelated Problem 3:\n**Problem Description:** \nConsider the following Python code snippet:\n\n```python\ndef find_product(arr):\n    product_value = 1\n    k = 0\n    while k < len(arr):\n        product_value *= arr[k]\n        k += 1\n    return product_value\n```\n\n**Solution:**\nWe have to prove the correctness of the `find_product` function by providing a loop invariant for the k-th iteration of the loop.\n\nTherefore, the final answer is: \"sum_value = sum(arr[0:h])\"."}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    h = len(arr)\n    while h > 0:\n        h -= 1\n        sum_value += arr[h]\n    return sum_value"}, {"role": "assistant", "content": "Related Problem 1:\n**Problem Description:** \nConsider the following Python code snippet:\n\n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    i = len(arr)\n    while i > 0:\n        i -= 1\n        if arr[i] > max_value:\n            max_value = arr[i]\n    return max_value\n```\n\n**Solution:**\nWe have to prove the correctness of the `find_max` function by providing a loop invariant for the i-th iteration of the loop.\n\nRelated Problem 2:\n**Problem Description:** \nConsider the following Python code snippet:\n\n```python\ndef find_avg(arr):\n    total_sum = 0\n    j = len(arr)\n    while j > 0:\n        j -= 1\n        total_sum += arr[j]\n    avg_value = total_sum / len(arr)\n    return avg_value\n```\n\n**Solution:**\nWe have to prove the correctness of the `find_avg` function by providing a loop invariant for the j-th iteration of the loop.\n\nRelated Problem 3:\n**Problem Description:** \nConsider the following Python code snippet:\n\n```python\ndef find_product(arr):\n    product_value = 1\n    k = len(arr)\n    while k > 0:\n        k -= 1\n        product_value *= arr[k]\n    return product_value\n```\n\n**Solution:**\nWe have to prove the correctness of the `find_product` function by providing a loop invariant for the k-th iteration of the loop.\n\nTherefore, the final answer is: \"sum_value = sum(arr[h:len(arr)])\"."}]