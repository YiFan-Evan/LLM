[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    a = 0\n    while a < len(arr):\n        sum_value += arr[a]\n        a += 1\n    return sum_value"}, {"role": "assistant", "content": "1. **Problem:** Write a Python program to calculate the average value of elements in a given array.\n\n   ```python\n   def calculate_average(arr):\n       sum_value = 0\n       a = 0\n       while a < len(arr):\n           sum_value += arr[a]\n           a += 1\n       average_value = sum_value / len(arr)\n       return average_value\n   ```\n\n   **Solution:**\n   - Loop Invariant: `sum_value = sum(arr[0:a])`\n\n2. **Problem:** Write a Python program to find the maximum element in a given array.\n\n   ```python\n   def find_max(arr):\n       max_value = float('-inf')\n       a = 0\n       while a < len(arr):\n           if arr[a] > max_value:\n               max_value = arr[a]\n           a += 1\n       return max_value\n   ```\n\n   **Solution:**\n   - Loop Invariant: `max_value = max(arr[0:a])`\n\n3. **Problem:** Write a Python program to check if a given array is sorted in non-decreasing order.\n\n   ```python\n   def is_sorted(arr):\n       is_sorted = True\n       a = 1\n       while a < len(arr) and is_sorted:\n           if arr[a-1] > arr[a]:\n               is_sorted = False\n           a += 1\n       return is_sorted\n   ```\n\n   **Solution:**\n   - Loop Invariant: `is_sorted = arr[0:a] is sorted in non-decreasing order`\n\nTherefore, the final answer is: \nLoop Invariant: `sum_value = sum(arr[0:a])`."}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    a = len(arr)\n    while a > 0:\n        a -= 1\n        sum_value += arr[a]\n    return sum_value"}, {"role": "assistant", "content": "1. **Problem:** Write a Python program to calculate the product of elements in a given array.\n\n   ```python\n   def calculate_product(arr):\n       product_value = 1\n       a = len(arr)\n       while a > 0:\n           a -= 1\n           product_value *= arr[a]\n       return product_value\n   ```\n\n   **Solution:**\n   - Loop Invariant: `product_value = prod(arr[a:len(arr)])`\n\n2. **Problem:** Write a Python program to find the minimum element in a given array.\n\n   ```python\n   def find_min(arr):\n       min_value = float('inf')\n       a = len(arr)\n       while a > 0:\n           a -= 1\n           if arr[a] < min_value:\n               min_value = arr[a]\n       return min_value\n   ```\n\n   **Solution:**\n   - Loop Invariant: `min_value = min(arr[a:len(arr)])`\n\n3. **Problem:** Write a Python program to check if a given array contains any negative elements.\n\n   ```python\n   def has_negative(arr):\n       has_negative = False\n       a = len(arr)\n       while a > 0 and not has_negative:\n           a -= 1\n           if arr[a] < 0:\n               has_negative = True\n       return has_negative\n   ```\n\n   **Solution:**\n   - Loop Invariant: `has_negative = True if there exists arr[x] < 0 where x belongs to [a:len(arr)]`\n\nTherefore, the final answer is: \nLoop Invariant: `sum_value = sum(arr[a:len(arr)])`."}]