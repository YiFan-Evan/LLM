[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    i = 0\n    while i < len(arr):\n        z = i + 1\n        while z < len(arr):\n            if arr[z] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[z]\n                arr[z] = temp\n            z += 1\n        i += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem**:\n   - **Description**: You are given a list of integers, and you need to sort the list in ascending order using the selection sort algorithm.\n   - **Solution**: Implement the selection sort algorithm to iterate through the list and swap elements as needed to sort the list in ascending order.\n\n2. **Problem**:\n   - **Description**: You are given an array of strings, and you need to sort the strings in lexicographically non-decreasing order.\n   - **Solution**: Implement the selection sort algorithm to iterate through the array and swap strings as needed to sort them in lexicographically non-decreasing order.\n\n3. **Problem**:\n   - **Description**: You are given a list of tuples, and you need to sort the tuples based on the sum of their elements in non-decreasing order.\n   - **Solution**: Implement the selection sort algorithm to iterate through the list of tuples and swap tuples as needed to sort them based on the sum of their elements in non-decreasing order.\n\nTherefore, the final answer is: \n'z_value = fun(arr[z]->arr[z]) and i_value = fun(arr[i]->arr[i])'"}, {"role": "user", "content": "def selection_sort(arr):\n    i = len(arr)\n    while i > 0:\n        i -= 1\n        z = i\n        while z > 0:\n            z -= 1\n            if arr[z] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[z]\n                arr[z] = temp\n    return arr"}, {"role": "assistant", "content": "1. **Problem**:\n   - **Description**: Given an array of integers, sort the array in descending order using the selection sort algorithm.\n   - **Solution**: Implement the selection sort algorithm to iterate through the array and swap elements as needed to sort them in descending order.\n\n2. **Problem**:\n   - **Description**: Given a list of characters, sort the characters in non-increasing order based on their ASCII values.\n   - **Solution**: Implement the selection sort algorithm to iterate through the list and swap characters as needed to sort them in non-increasing order based on their ASCII values.\n\n3. **Problem**:\n   - **Description**: Given a list of lists of integers, sort the lists based on the maximum value in each list in non-increasing order.\n   - **Solution**: Implement the selection sort algorithm to iterate through the list of lists and swap lists as needed to sort them based on the maximum value in each list in non-increasing order.\n\nTherefore, the final answer is: \n'z_value = fun(arr[z]->arr[z]) and i_value = fun(arr[i]->arr[i])'"}]