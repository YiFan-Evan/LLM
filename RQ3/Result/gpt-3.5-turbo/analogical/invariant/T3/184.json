[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    e = 0\n    while e < len(arr):\n        z = e + 1\n        while z < len(arr):\n            if arr[z] < arr[e]:\n                temp = arr[e]\n                arr[e] = arr[z]\n                arr[z] = temp\n            z += 1\n        e += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\nProblem 1:\n**Description:** Consider a program that finds the maximum element in an array using a loop.\n```python\ndef find_max(arr):\n    max_val = arr[0]\n    i = 1\n    while i < len(arr):\n        if arr[i] > max_val:\n            max_val = arr[i]\n        i += 1\n    return max_val\n```\n**Solution:** Loop invariant for the i-th iteration: 'max_value = max(arr[0:i])'.\n\nProblem 2:\n**Description:** Consider a program that calculates the factorial of a number using a loop.\n```python\ndef factorial(n):\n    result = 1\n    i = 1\n    while i <= n:\n        result *= i\n        i += 1\n    return result\n```\n**Solution:** Loop invariant for the i-th iteration: 'result_value = i!'.\n\nProblem 3:\n**Description:** Consider a program that multiplies all elements of an array by a given factor using a loop.\n```python\ndef multiply(arr, factor):\n    i = 0\n    while i < len(arr):\n        arr[i] *= factor\n        i += 1\n    return arr\n```\n**Solution:** Loop invariant for the i-th iteration: 'arr_value = original_arr * (factor ** i)'.\n\n\nTherefore, the final answer is: \n\nLoop invariant for the inner loop in the selection sort algorithm:\n'z_value = min(arr[e:])'."}, {"role": "user", "content": "def selection_sort(arr):\n    e = len(arr)\n    while e > 0:\n        e -= 1\n        z = i\n        while z > 0:\n            z -= 1\n            if arr[z] < arr[e]:\n                temp = arr[e]\n                arr[e] = arr[z]\n                arr[z] = temp\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\nProblem 1:\n**Description:** Consider a program that calculates the sum of all elements in an array using a loop.\n```python\ndef array_sum(arr):\n    total = 0\n    i = 0\n    while i < len(arr):\n        total += arr[i]\n        i += 1\n    return total\n```\n**Solution:** Loop invariant for the i-th iteration: 'total_value = sum(arr[0:i])'.\n\nProblem 2:\n**Description:** Consider a program that counts the number of occurrences of a particular element in an array.\n```python\ndef count_occurrences(arr, elem):\n    count = 0\n    i = 0\n    while i < len(arr):\n        if arr[i] == elem:\n            count += 1\n        i += 1\n    return count\n```\n**Solution:** Loop invariant for the i-th iteration: 'count_value = number of occurrences of elem in arr[0:i]'.\n\nProblem 3:\n**Description:** Consider a program that reverses the elements of an array using a loop.\n```python\ndef reverse_array(arr):\n    start = 0\n    end = len(arr) - 1\n    while start < end:\n        temp = arr[start]\n        arr[start] = arr[end]\n        arr[end] = temp\n        start += 1\n        end -= 1\n    return arr\n```\n**Solution:** Loop invariant for the i-th iteration: 'arr_value = original_arr with elements reversed from index 0 to i'.\n\n\nTherefore, the final answer is: \n\nLoop invariant for the inner loop in the selection sort algorithm:\n'z_value = max(arr[:z+1])'."}]