[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    n = 0\n    while n < len(arr):\n        z = n + 1\n        while z < len(arr):\n            if arr[z] < arr[n]:\n                temp = arr[n]\n                arr[n] = arr[z]\n                arr[z] = temp\n            z += 1\n        n += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem**: \nSuppose we have an array of integers. We want to write a program that finds the maximum element in the array.\n```python\ndef find_max(arr):\n    max_val = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > max_val:\n            max_val = arr[i]\n    return max_val\n```\n\n2. **Problem**: \nConsider the following program that calculates the sum of elements in an array:\n```python\ndef calculate_sum(arr):\n    total = 0\n    for i in range(len(arr)):\n        total += arr[i]\n    return total\n```\n\n3. **Problem**: \nSuppose we have an array of integers. We want to write a program that finds the average of all elements in the array.\n```python\ndef calculate_average(arr):\n    total = 0\n    for i in range(len(arr)):\n        total += arr[i]\n    return total / len(arr)\n```\n\n**Answer to the original problem**:\nTherefore, the final answer is: \n`n_value = sorted(arr[0:n])`."}, {"role": "user", "content": "def selection_sort(arr):\n    n = -1\n    while n < len(arr) - 1:\n        n += 1\n        z = n + 1\n        while z < len(arr):\n            if arr[z] < arr[n]:\n                temp = arr[n]\n                arr[n] = arr[z]\n                arr[z] = temp\n            z += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem**: \nSuppose we have an array of integers. We want to write a program that finds the minimum element in the array.\n```python\ndef find_min(arr):\n    min_val = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n    return min_val\n```\n\n2. **Problem**: \nConsider the following program that calculates the product of elements in an array:\n```python\ndef calculate_product(arr):\n    product = 1\n    for i in range(len(arr)):\n        product *= arr[i]\n    return product\n```\n\n3. **Problem**: \nSuppose we have an array of integers. We want to write a program that finds the median of all elements in the array.\n```python\ndef calculate_median(arr):\n    sorted_arr = sorted(arr)\n    n = len(arr)\n    if n % 2 == 1:\n        return sorted_arr[n // 2]\n    else:\n        return (sorted_arr[n // 2 - 1] + sorted_arr[n // 2]) / 2\n```\n\n**Answer to the original problem**:\nTherefore, the final answer is: \n`n_value = sorted(arr[0:n+1])`."}]