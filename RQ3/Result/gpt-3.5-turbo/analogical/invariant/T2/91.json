[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_last(arr):\n    last_value = arr[0]\n    l = 0\n    while l < len(arr):\n        last_value = arr[l]\n        l += 1\n    return last_value"}, {"role": "assistant", "content": "1. **Problem**: Write a program to find the maximum element in an array.\n\n**Code**:\n```python\ndef find_max(arr):\n    max_value = arr[0]\n    i = 1\n    while i < len(arr):\n        if arr[i] > max_value:\n            max_value = arr[i]\n        i += 1\n    return max_value\n```\n\n2. **Problem**: Write a program to find the sum of all elements in an array.\n\n**Code**:\n```python\ndef find_sum(arr):\n    total = 0\n    j = 0\n    while j < len(arr):\n        total += arr[j]\n        j += 1\n    return total\n```\n\n3. **Problem**: Write a program to determine if an array is sorted in non-decreasing order.\n\n**Code**:\n```python\ndef is_sorted(arr):\n    is_sorted = True\n    k = 1\n    while k < len(arr) and is_sorted:\n        if arr[k] < arr[k-1]:\n            is_sorted = False\n        k += 1\n    return is_sorted\n```\n\n**Answer**:\nTherefore, the final answer is: 'l = l_temp -> len(arr)'"}, {"role": "user", "content": "def give_last(arr):\n    last_value = arr[0]\n    l = -1\n    while l < len(arr) - 1:\n        l += 1\n        last_value = arr[l]\n    return last_value"}, {"role": "assistant", "content": "1. **Problem**: Write a program to find the minimum element in an array.\n\n**Code**:\n```python\ndef find_min(arr):\n    min_value = arr[0]\n    i = 1\n    while i < len(arr):\n        if arr[i] < min_value:\n            min_value = arr[i]\n        i += 1\n    return min_value\n```\n\n2. **Problem**: Write a program to find the product of all elements in an array.\n\n**Code**:\n```python\ndef find_product(arr):\n    product = 1\n    j = 0\n    while j < len(arr):\n        product *= arr[j]\n        j += 1\n    return product\n```\n\n3. **Problem**: Write a program to count the number of even elements in an array.\n\n**Code**:\n```python\ndef count_even(arr):\n    count = 0\n    k = 0\n    while k < len(arr):\n        if arr[k] % 2 == 0:\n            count += 1\n        k += 1\n    return count\n```\n\n**Answer**:\nTherefore, the final answer is: 'l = l_temp -> l < len(arr)'"}]