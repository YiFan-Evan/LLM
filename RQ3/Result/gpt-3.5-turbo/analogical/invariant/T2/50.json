[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_count(arr, target):\n    count_value = 0\n    k = 0\n    while k < len(arr):\n        if arr[k] == target:\n            count_value += 1\n        k += 1\n    return count_value"}, {"role": "assistant", "content": "1. Problem: \nWrite a function to find the sum of all positive numbers in an array.\nSolution: \n```python\ndef find_positive_sum(arr):\n    sum_value = 0\n    i = 0\n    while i < len(arr):\n        if arr[i] > 0:\n            sum_value += arr[i]\n        i += 1\n    return sum_value\n```\n\n2. Problem: \nWrite a function to calculate the product of all even numbers in an array.\nSolution: \n```python\ndef product_of_even(arr):\n    product_value = 1\n    j = 0\n    while j < len(arr):\n        if arr[j] % 2 == 0:\n            product_value *= arr[j]\n        j += 1\n    return product_value\n```\n\n3. Problem: \nWrite a function to determine if all elements in the array are greater than zero.\nSolution: \n```python\ndef all_positive(arr):\n    result_value = True\n    p = 0\n    while p < len(arr):\n        if arr[p] <= 0:\n            result_value = False\n            break\n        p += 1\n    return result_value\n```\n\nTherefore, the final answer is: 'count_value = count(arr[0:k], target)'."}, {"role": "user", "content": "def give_count(arr, target):\n    count_value = 0\n    k = -1\n    while k < len(arr) - 1:\n        k += 1\n        if arr[k] == target:\n            count_value += 1\n    return count_value"}, {"role": "assistant", "content": "1. Problem: \nWrite a function to find the maximum element in an array.\nSolution: \n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    i = 0\n    while i < len(arr):\n        if arr[i] > max_value:\n            max_value = arr[i]\n        i += 1\n    return max_value\n```\n\n2. Problem: \nWrite a function to calculate the average of all elements in an array.\nSolution: \n```python\ndef calculate_average(arr):\n    sum_value = 0\n    j = 0\n    while j < len(arr):\n        sum_value += arr[j]\n        j += 1\n    return sum_value / len(arr) if len(arr) > 0 else 0\n```\n\n3. Problem: \nWrite a function to check if an array is sorted in non-decreasing order.\nSolution: \n```python\ndef is_sorted(arr):\n    sorted_value = True\n    k = 0\n    while k < len(arr) - 1:\n        if arr[k] > arr[k + 1]:\n            sorted_value = False\n            break\n        k += 1\n    return sorted_value\n```\n\nTherefore, the final answer is: 'count_value = count(arr[0:k+1], target)'."}]