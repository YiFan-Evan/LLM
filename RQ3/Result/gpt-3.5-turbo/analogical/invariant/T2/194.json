[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    o = 0\n    while o < len(arr):\n        z = o + 1\n        while z < len(arr):\n            if arr[z] < arr[o]:\n                temp = arr[o]\n                arr[o] = arr[z]\n                arr[z] = temp\n            z += 1\n        o += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Function: Find the minimum value in the list.\n- Description: Given a list of integers, find the minimum value in the list.\n- Input: [5, 2, 9, 1, 7]\n- Output: 1\n- Solution: Iterate through the list while keeping track of the minimum value found so far. Update the minimum value if a smaller value is found.\n\n2. Function: Sum all positive integers in the list.\n- Description: Given a list of integers, find the sum of all positive integers in the list.\n- Input: [-3, 5, -1, 8, -2]\n- Output: 13\n- Solution: Iterate through the list, and if the value is positive, add it to a running sum variable.\n\n3. Function: Check if the list is sorted.\n- Description: Given a list of integers, check if the list is sorted in non-decreasing order.\n- Input: [1, 2, 3, 5, 4]\n- Output: False\n- Solution: Iterate through the list and compare each element with the next one. If any element is greater than the next element, the list is not sorted.\n\nTherefore, the final answer is: 'o_value = 0 <= len(arr)'"}, {"role": "user", "content": "def selection_sort(arr):\n    o = -1\n    while o < len(arr) - 1:\n        o += 1\n        z = o + 1\n        while z < len(arr):\n            if arr[z] < arr[o]:\n                temp = arr[o]\n                arr[o] = arr[z]\n                arr[z] = temp\n            z += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Function: Find the maximum value in the list.\n- Description: Given a list of integers, find the maximum value in the list.\n- Input: [5, 2, 9, 1, 7]\n- Output: 9\n- Solution: Iterate through the list while keeping track of the maximum value found so far. Update the maximum value if a larger value is found.\n\n2. Function: Count the number of negative integers in the list.\n- Description: Given a list of integers, count the number of negative integers in the list.\n- Input: [-3, 5, -1, 8, -2]\n- Output: 3\n- Solution: Initialize a count variable to zero and iterate through the list. If the value is negative, increment the count.\n\n3. Function: Check if all elements in the list are the same.\n- Description: Given a list of integers, check if all elements in the list are the same.\n- Input: [1, 1, 1, 1, 1]\n- Output: True\n- Solution: Iterate through the list and compare each element with the first element. If any element is different, return False.\n\nTherefore, the final answer is: 'o_value = -1 <= len(arr) - 1'."}]