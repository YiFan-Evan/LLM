[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    h = 0\n    while h < len(arr):\n        sum_value += arr[h]\n        h += 1\n    return sum_value"}, {"role": "assistant", "content": "1. Problem: Write a loop invariant for finding the maximum element in an array.\nDescription: Given an array, write a Python program to find the maximum element in the array.\nSolution:\n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    i = 0\n    while i < len(arr):\n        if arr[i] > max_value:\n            max_value = arr[i]\n        i += 1\n    return max_value\n```\n\n2. Problem: Write a loop invariant for counting the number of even numbers in an array.\nDescription: Given an array, write a Python program to count the number of even numbers in the array.\nSolution:\n```python\ndef count_even(arr):\n    count = 0\n    j = 0\n    while j < len(arr):\n        if arr[j] % 2 == 0:\n            count += 1\n        j += 1\n    return count\n```\n\n3. Problem: Write a loop invariant for checking if an array is sorted in non-decreasing order.\nDescription: Given an array, write a Python program to check if the elements of the array are sorted in non-decreasing order.\nSolution:\n```python\ndef is_sorted(arr):\n    sorted_flag = True\n    k = 1\n    while k < len(arr):\n        if arr[k-1] > arr[k]:\n            sorted_flag = False\n            break\n        k += 1\n    return sorted_flag\n```\n\nTherefore, the final answer is: 'sum_value = sum(arr[0:h])'."}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    h = -1\n    while h < len(arr) - 1:\n        h += 1\n        sum_value += arr[h]\n    return sum_value"}, {"role": "assistant", "content": "1. Problem: Write a loop invariant for finding the minimum element in an array.\nDescription: Given an array, write a Python program to find the minimum element in the array.\nSolution:\n```python\ndef find_min(arr):\n    min_value = float('inf')\n    i = 0\n    while i < len(arr):\n        if arr[i] < min_value:\n            min_value = arr[i]\n        i += 1\n    return min_value\n```\n\n2. Problem: Write a loop invariant for calculating the product of all elements in an array.\nDescription: Given an array, write a Python program to calculate the product of all elements in the array.\nSolution:\n```python\ndef calc_product(arr):\n    product_value = 1\n    j = 0\n    while j < len(arr):\n        product_value *= arr[j]\n        j += 1\n    return product_value\n```\n\n3. Problem: Write a loop invariant for checking if an array contains a specific element.\nDescription: Given an array and a target element, write a Python program to check if the target element is present in the array.\nSolution:\n```python\ndef contains_element(arr, target):\n    is_found = False\n    k = 0\n    while k < len(arr):\n        if arr[k] == target:\n            is_found = True\n            break\n        k += 1\n    return is_found\n```\n\nTherefore, the final answer is: 'sum_value = sum(arr[0:h+1])'."}]