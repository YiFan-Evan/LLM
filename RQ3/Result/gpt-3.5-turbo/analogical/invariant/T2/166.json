[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def insertion_sort(arr):\n    g = 0\n    while g < len(arr):\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        g += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Function name: sum_elements\n   Description: Given an array of integers, the function iterates through the array and calculates the sum of all elements in the array.\n   Solution:\n   ```python\n   def sum_elements(arr):\n       total = 0\n       for i in range(len(arr)):\n           total += arr[i]\n       return total\n   ```\n\n2. Function name: max_element\n   Description: Given an array of integers, the function finds and returns the maximum element in the array.\n   Solution:\n   ```python\n   def max_element(arr):\n       max_val = arr[0]\n       for i in range(1, len(arr)):\n           if arr[i] > max_val:\n               max_val = arr[i]\n       return max_val\n   ```\n\n3. Function name: count_positive\n   Description: Given an array of integers, the function counts the number of positive elements in the array.\n   Solution:\n   ```python\n   def count_positive(arr):\n       count = 0\n       for i in range(len(arr)):\n           if arr[i] > 0:\n               count += 1\n       return count\n   ```\n\nTherefore, the final answer is: 'z_value = fun(arr[z-1]->arr[z])'."}, {"role": "user", "content": "def insertion_sort(arr):\n    g = -1\n    while g < len(arr) - 1:\n        g += 1\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Function name: product_elements\n   Description: Given an array of integers, the function calculates the product of all elements in the array.\n   Solution:\n   ```python\n   def product_elements(arr):\n       product = 1\n       for i in range(len(arr)):\n           product *= arr[i]\n       return product\n   ```\n\n2. Function name: min_element\n   Description: Given an array of integers, the function finds and returns the minimum element in the array.\n   Solution:\n   ```python\n   def min_element(arr):\n       min_val = arr[0]\n       for i in range(1, len(arr)):\n           if arr[i] < min_val:\n               min_val = arr[i]\n       return min_val\n   ```\n\n3. Function name: count_negative\n   Description: Given an array of integers, the function counts the number of negative elements in the array.\n   Solution:\n   ```python\n   def count_negative(arr):\n       count = 0\n       for i in range(len(arr)):\n           if arr[i] < 0:\n               count += 1\n       return count\n   ```\n\nTherefore, the final answer is: 'z_value = fun(arr[z-1]->arr[z])'."}]