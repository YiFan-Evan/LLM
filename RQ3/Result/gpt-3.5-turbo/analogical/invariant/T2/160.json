[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def insertion_sort(arr):\n    a = 0\n    while a < len(arr):\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        a += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem:** \nYou are given a Python program code for selection sort. The program code contains a loop, and the purpose of the code is to sort an array in non-decreasing order using selection sort. \n**Solution:** \n1. Loop invariant for the first loop: \n'0_value = arr[0]->arr[a]'.\n2. Loop invariant for the second loop: \n'i_value = arr[i]->arr[z]'.\n\n\n2. **Problem:** \nYou are given a Python program code for bubble sort. The program code contains a loop, and the purpose of the code is to sort an array in non-decreasing order using bubble sort.\n**Solution:** \n1. Loop invariant for the first loop: \n'0_value = arr[0]->arr[a]'.\n2. Loop invariant for the second loop: \n'i_value = arr[i]->arr[z]'.\n\n\n3. **Problem:** \nYou are given a Python program code for merge sort. The program code contains a loop, and the purpose of the code is to sort an array in non-decreasing order using merge sort.\n**Solution:** \n1. Loop invariant for the first loop: \n'0_value = arr[0]->arr[a]'.\n2. Loop invariant for the second loop: \n'i_value = arr[i]->arr[z]'.\n\n\nTherefore, the final answer is: \n'i_value = arr[i]->arr[z]'."}, {"role": "user", "content": "def insertion_sort(arr):\n    a = -1\n    while a < len(arr) - 1:\n        a += 1\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem:** \nYou are given a Python program code for selection sort. The program code contains a loop, and the purpose of the code is to sort an array in non-decreasing order using selection sort. \n**Solution:** \n1. Loop invariant for the first loop: \n'-1_value = arr[-1]->arr[a]'.\n2. Loop invariant for the second loop: \n'i_value = arr[i]->arr[z]'.\n\n\n2. **Problem:** \nYou are given a Python program code for bubble sort. The program code contains a loop, and the purpose of the code is to sort an array in non-decreasing order using bubble sort.\n**Solution:** \n1. Loop invariant for the first loop: \n'-1_value = arr[-1]->arr[a]'.\n2. Loop invariant for the second loop: \n'i_value = arr[i]->arr[z]'.\n\n\n3. **Problem:** \nYou are given a Python program code for merge sort. The program code contains a loop, and the purpose of the code is to sort an array in non-decreasing order using merge sort.\n**Solution:** \n1. Loop invariant for the first loop: \n'-1_value = arr[-1]->arr[a]'.\n2. Loop invariant for the second loop: \n'i_value = arr[i]->arr[z]'.\n\n\nTherefore, the final answer is: \n'i_value = arr[i]->arr[z]'."}]