[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def find_max(arr):\n    max_value = arr[0]\n    p = 0\n    while p < len(arr):\n        if arr[p] > max_value:\n            max_value = arr[p]\n        p += 1\n    return max_value\n"}, {"role": "assistant", "content": "1. Problem: \nWrite a Python program to find the sum of all elements in an array.\n\nSolution:\n```\ndef find_sum(arr):\n    total = 0\n    p = 0\n    while p < len(arr):\n        total += arr[p]\n        p += 1\n    return total\n```\n\n2. Problem:\nWrite a Python program to find the minimum value in an array.\n\nSolution:\n```\ndef find_min(arr):\n    min_value = arr[0]\n    p = 0\n    while p < len(arr):\n        if arr[p] < min_value:\n            min_value = arr[p]\n        p += 1\n    return min_value\n```\n\n3. Problem:\nWrite a Python program to count the number of negative elements in an array.\n\nSolution:\n```\ndef count_negatives(arr):\n    negative_count = 0\n    p = 0\n    while p < len(arr):\n        if arr[p] < 0:\n            negative_count += 1\n        p += 1\n    return negative_count\n```\n\nTherefore, the final answer is: 'p = 0 -> p < len(arr)'."}, {"role": "user", "content": "def find_max(arr):\n    max_value = arr[0]\n    p = -1\n    while p < len(arr) - 1:\n        p += 1\n        if arr[p] > max_value:\n            max_value = arr[p]\n    return max_value\n"}, {"role": "assistant", "content": "1. Problem:\nWrite a Python program to find the average value of elements in an array.\n\nSolution:\n```\ndef find_average(arr):\n    total = 0\n    p = 0\n    while p < len(arr):\n        total += arr[p]\n        p += 1\n    average_value = total / len(arr)\n    return average_value\n```\n\n2. Problem:\nWrite a Python program to find the median value of elements in an array (assuming the array is already sorted).\n\nSolution:\n```\ndef find_median(arr):\n    n = len(arr)\n    if n % 2 == 0:\n        median_value = (arr[n//2 - 1] + arr[n//2]) / 2\n    else:\n        median_value = arr[n//2]\n    return median_value\n```\n\n3. Problem:\nWrite a Python program to calculate the product of all elements in an array.\n\nSolution:\n```\ndef find_product(arr):\n    product_value = 1\n    p = 0\n    while p < len(arr):\n        product_value *= arr[p]\n        p += 1\n    return product_value\n```\n\nTherefore, the final answer is: 'p = -1 -> p < len(arr) - 1'."}]