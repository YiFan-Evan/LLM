[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_count(arr, target):\n    count_value = 0\n    a = 0\n    while a < len(arr):\n        if arr[a] == target:\n            count_value += 1\n        a += 1\n    return count_value"}, {"role": "assistant", "content": "1. Problem: \nWrite a Python function that takes a list of integers and a target integer, and returns the number of elements in the list that are less than the target.\n\nSolution:\n```\ndef count_less_than_target(arr, target):\n    count_value = 0\n    a = 0\n    while a < len(arr):\n        if arr[a] < target:\n            count_value += 1\n        a += 1\n    return count_value\n```\n\n2. Problem:\nWrite a Python function that takes a list of strings and a target string, and returns the number of elements in the list that have the same length as the target string.\n\nSolution:\n```\ndef count_same_length(arr, target):\n    count_value = 0\n    a = 0\n    while a < len(arr):\n        if len(arr[a]) == len(target):\n            count_value += 1\n        a += 1\n    return count_value\n```\n\n3. Problem:\nWrite a Python function that takes a list of boolean values and a target boolean value, and returns the number of elements in the list that are equal to the target boolean value.\n\nSolution:\n```\ndef count_equal_to_target(arr, target):\n    count_value = 0\n    a = 0\n    while a < len(arr):\n        if arr[a] == target:\n            count_value += 1\n        a += 1\n    return count_value\n```\n\nTherefore, the final answer is: 'count_value = sum(arr[0:a] == target)'"}, {"role": "user", "content": "def give_count(arr, target):\n    count_value = 0\n    a = -1\n    while a < len(arr) - 1:\n        a += 1\n        if arr[a] == target:\n            count_value += 1\n    return count_value"}, {"role": "assistant", "content": "1. Problem: \nWrite a Python function that takes a list of integers and a target integer, and returns the number of elements in the list that are greater than the target.\n\nSolution:\n```\ndef count_greater_than_target(arr, target):\n    count_value = 0\n    a = -1\n    while a < len(arr) - 1:\n        a += 1\n        if arr[a] > target:\n            count_value += 1\n    return count_value\n```\n\n2. Problem:\nWrite a Python function that takes a list of strings and a target string, and returns the number of elements in the list that contain the target string as a substring.\n\nSolution:\n```\ndef count_substring_occurrences(arr, target):\n    count_value = 0\n    a = -1\n    while a < len(arr) - 1:\n        a += 1\n        if target in arr[a]:\n            count_value += 1\n    return count_value\n```\n\n3. Problem:\nWrite a Python function that takes a list of tuples of integers and a target tuple, and returns the number of elements in the list where the sum of the tuple elements is equal to the sum of the target tuple elements.\n\nSolution:\n```\ndef count_tuple_sum_matches(arr, target):\n    count_value = 0\n    a = -1\n    while a < len(arr) - 1:\n        a += 1\n        if sum(arr[a]) == sum(target):\n            count_value += 1\n    return count_value\n```\n\nTherefore, the final answer is: 'count_value = sum(arr[0:a] == target)'"}]