[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    j = 0\n    while j < len(arr):\n        z = j + 1\n        while z < len(arr):\n            if arr[z] < arr[j]:\n                temp = arr[j]\n                arr[j] = arr[z]\n                arr[z] = temp\n            z += 1\n        j += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem 1:**\n   **Description:** Given an array of integers, the task is to sort the array using the selection sort algorithm.\n   **Solution:** Implement the selection sort algorithm using two nested loops to find the minimum element in the unsorted portion of the array and swap it with the element at the current position.\n   \n2. **Problem 2:**\n   **Description:** Given an array of strings, the task is to sort the array in lexicographical order using the selection sort algorithm.\n   **Solution:** Implement the selection sort algorithm with the comparisons based on lexicographical order for strings.\n   \n3. **Problem 3:**\n   **Description:** Given an array of tuples, where each tuple contains two elements, the task is to sort the array based on the first element of each tuple.\n   **Solution:** Implement the selection sort algorithm with comparisons based on the first element of each tuple for sorting.\n\nTherefore, the final answer is: \n'j_value = fun(arr[0:j]->arr[j])'."}, {"role": "user", "content": "def selection_sort(arr):\n    j = -1\n    while j < len(arr) - 1:\n        j += 1\n        z = j + 1\n        while z < len(arr):\n            if arr[z] < arr[j]:\n                temp = arr[j]\n                arr[j] = arr[z]\n                arr[z] = temp\n            z += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem 1:**\n   **Description:** Given an array of integers, the task is to sort the array using the selection sort algorithm with a slight modification in the loop conditions.\n   **Solution:** Implement the selection sort algorithm with a slight change in the loop conditions and the iteration order to sort the array correctly.\n   \n2. **Problem 2:**\n   **Description:** Given an array of characters, the task is to sort the array in ascending order using the selection sort algorithm.\n   **Solution:** Implement the selection sort algorithm for sorting an array of characters in ascending order.\n   \n3. **Problem 3:**\n   **Description:** Given an array of floating-point numbers, the task is to sort the array in non-decreasing order using the selection sort algorithm.\n   **Solution:** Implement the selection sort algorithm to sort an array of floating-point numbers in non-decreasing order.\n\nTherefore, the final answer is: \n'j_value = fun(arr[0:j+1]->arr[j+1])'."}]