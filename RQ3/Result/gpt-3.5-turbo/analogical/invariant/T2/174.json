[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def insertion_sort(arr):\n    o = 0\n    while o < len(arr):\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        o += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Problem: Consider a program to find the maximum element in an array using a loop.\n   \n   ```python\n   def find_max(arr):\n       max_value = float('-inf')\n       i = 0\n       while i < len(arr):\n           if arr[i] > max_value:\n               max_value = arr[i]\n           i += 1\n       return max_value\n   ```\n\n2. Problem: Consider a program to compute the sum of all elements in an array using a loop.\n   \n   ```python\n   def array_sum(arr):\n       sum_value = 0\n       i = 0\n       while i < len(arr):\n           sum_value += arr[i]\n           i += 1\n       return sum_value\n   ```\n\n3. Problem: Consider a program to check if all elements in the array are positive using a loop.\n\n   ```python\n   def all_positive(arr):\n       all_pos = True\n       i = 0\n       while i < len(arr):\n           if arr[i] <= 0:\n               all_pos = False\n               break\n           i += 1\n       return all_pos\n   ```\n\nTherefore, the final answer is: 'o_value = 0'."}, {"role": "user", "content": "def insertion_sort(arr):\n    o = -1\n    while o < len(arr) - 1:\n        o += 1\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Problem: Consider a program to find the minimum element in an array using a loop.\n   \n   ```python\n   def find_min(arr):\n       min_value = float('inf')\n       i = -1\n       while i < len(arr) - 1:\n           i += 1\n           if arr[i] < min_value:\n               min_value = arr[i]\n       return min_value\n   ```\n\n2. Problem: Consider a program to compute the product of all elements in an array using a loop.\n   \n   ```python\n   def array_product(arr):\n       product_value = 1\n       i = -1\n       while i < len(arr) - 1:\n           i += 1\n           product_value *= arr[i]\n       return product_value\n   ```\n\n3. Problem: Consider a program to check if any element in the array is equal to zero using a loop.\n\n   ```python\n   def any_zero(arr):\n       any_zero = False\n       i = -1\n       while i < len(arr) - 1:\n           i += 1\n           if arr[i] == 0:\n               any_zero = True\n               break\n       return any_zero\n   ```\n\nTherefore, the final answer is: 'o_value = -1'."}]