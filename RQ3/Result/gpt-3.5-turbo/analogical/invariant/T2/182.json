[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    c = 0\n    while c < len(arr):\n        z = c + 1\n        while z < len(arr):\n            if arr[z] < arr[c]:\n                temp = arr[c]\n                arr[c] = arr[z]\n                arr[z] = temp\n            z += 1\n        c += 1\n    return arr"}, {"role": "assistant", "content": "First related problem:\nProblem: Provide a loop invariant for a program that finds the largest element in an array.\nSolution: Loop invariant: 'max_value = max(arr[0:c])'\n\nSecond related problem:\nProblem: Provide a loop invariant for a program that calculates the sum of elements in an array.\nSolution: Loop invariant: 'sum_value = sum(arr[0:c])'\n\nThird related problem:\nProblem: Provide a loop invariant for a program that checks if all elements in an array are positive.\nSolution: Loop invariant: 'all_positive = all(x > 0 for x in arr[0:c])'\n\nTherefore, the final answer is: Loop invariant: 'c_sorted = sorted(arr[0:c])'"}, {"role": "user", "content": "def selection_sort(arr):\n    c = -1\n    while c < len(arr) - 1:\n        c += 1\n        z = c + 1\n        while z < len(arr):\n            if arr[z] < arr[c]:\n                temp = arr[c]\n                arr[c] = arr[z]\n                arr[z] = temp\n            z += 1\n    return arr"}, {"role": "assistant", "content": "First related problem:\nProblem: Provide a loop invariant for a program that finds the smallest element in an array.\nSolution: Loop invariant: 'min_value = min(arr[0:c+1])'\n\nSecond related problem:\nProblem: Provide a loop invariant for a program that calculates the product of elements in an array.\nSolution: Loop invariant: 'product_value = math.prod(arr[0:c+1])'\n\nThird related problem:\nProblem: Provide a loop invariant for a program that checks if all elements in an array are unique.\nSolution: Loop invariant: 'all_unique = all(arr[0:c+1].count(x) == 1 for x in arr[0:c+1])'\n\nTherefore, the final answer is: Loop invariant: 'c_sorted = sorted(arr[0:c+1])'"}]