[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    i = 0\n    while i < len(arr):\n        sum_value += arr[i]\n        i += 1\n    return sum_value"}, {"role": "assistant", "content": "**Related Problem 1:**\n\n**Problem:**\nWrite a Python program that calculates the product of elements of an array.\n\n**Program:**\n```python\ndef give_product(arr):\n    product_value = 1\n    i = 0\n    while i < len(arr):\n        product_value *= arr[i]\n        i += 1\n    return product_value\n```\n\n**Related Problem 2:**\n\n**Problem:**\nWrite a Python program that finds the maximum element in an array.\n\n**Program:**\n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    i = 0\n    while i < len(arr):\n        if arr[i] > max_value:\n            max_value = arr[i]\n        i += 1\n    return max_value\n```\n\n**Related Problem 3:**\n\n**Problem:**\nWrite a Python program that checks if all elements in an array are positive.\n\n**Program:**\n```python\ndef all_positive(arr):\n    all_pos = True\n    i = 0\n    while i < len(arr):\n        if arr[i] <= 0:\n            all_pos = False\n            break\n        i += 1\n    return all_pos\n```\n\n**Therefore, the final answer is:**\n'arr[i] = arr[0:i]'"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    i = -1\n    while i < len(arr) - 1:\n        i += 1\n        sum_value += arr[i]\n    return sum_value"}, {"role": "assistant", "content": "**Related Problem 1:**\n\n**Problem:**\nWrite a Python program that multiplies every other element in an array starting from the first element.\n\n**Program:**\n```python\ndef multiply_every_other(arr):\n    product_value = 1\n    i = -1\n    while i < len(arr) - 1:\n        i += 2\n        if i < len(arr):\n            product_value *= arr[i]\n    return product_value\n```\n\n**Related Problem 2:**\n\n**Problem:**\nWrite a Python program that counts the number of negative elements in an array.\n\n**Program:**\n```python\ndef count_negative(arr):\n    count = 0\n    i = -1\n    while i < len(arr) - 1:\n        i += 1\n        if arr[i] < 0:\n            count += 1\n    return count\n```\n\n**Related Problem 3:**\n\n**Problem:**\nWrite a Python program that checks if an array is sorted in non-decreasing order.\n\n**Program:**\n```python\ndef is_sorted(arr):\n    sorted_flag = True\n    i = -1\n    while i < len(arr) - 2:\n        i += 1\n        if arr[i] > arr[i+1]:\n            sorted_flag = False\n            break\n    return sorted_flag\n```\n\n**Therefore, the final answer is:**\n'i = i is such that 0 <= i <= len(arr) and sum_value = sum(arr[0:i])'"}]