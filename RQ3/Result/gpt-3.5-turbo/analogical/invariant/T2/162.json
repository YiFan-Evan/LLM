[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def insertion_sort(arr):\n    c = 0\n    while c < len(arr):\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        c += 1\n    return arr"}, {"role": "assistant", "content": "**Problem 1:**\n\n**Description:** Write a Python program to find the maximum element in an array.\n\n**Solution:**\n```python\ndef find_max(arr):\n    max_value = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n    return max_value\n```\n\n**Problem 2:**\n\n**Description:** Write a Python program to compute the factorial of a non-negative integer.\n\n**Solution:**\n```python\ndef factorial(n):\n    fact_value = 1\n    for i in range(1, n+1):\n        fact_value *= i\n    return fact_value\n```\n\n**Problem 3:**\n\n**Description:** Write a Python program to reverse an array in-place.\n\n**Solution:**\n```python\ndef reverse_array(arr):\n    left = 0\n    right = len(arr) - 1\n    while left < right:\n        temp = arr[left]\n        arr[left] = arr[right]\n        arr[right] = temp\n        left += 1\n        right -= 1\n    return arr\n```\n\nTherefore, the final answer is: `z = fun(arr[z] <-> arr[z-1])`."}, {"role": "user", "content": "def insertion_sort(arr):\n    c = -1\n    while c < len(arr) - 1:\n        c += 1\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n    return arr"}, {"role": "assistant", "content": "**Problem 1:**\n\n**Description:** Write a Python program to find the minimum element in an array.\n\n**Solution:**\n```python\ndef find_min(arr):\n    min_value = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] < min_value:\n            min_value = arr[i]\n    return min_value\n```\n\n**Problem 2:**\n\n**Description:** Write a Python program to count the number of occurrences of a specific element in an array.\n\n**Solution:**\n```python\ndef count_occurrences(arr, target):\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == target:\n            count += 1\n    return count\n```\n\n**Problem 3:**\n\n**Description:** Write a Python program to check if an array is sorted in non-decreasing order.\n\n**Solution:**\n```python\ndef is_sorted(arr):\n    for i in range(1, len(arr)):\n        if arr[i] < arr[i - 1]:\n            return False\n    return True\n```\n\nTherefore, the final answer is: `z = fun(arr[z] <-> arr[z-1])`."}]