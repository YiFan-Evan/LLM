[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    m = 0\n    while m < len(arr):\n        z = m + 1\n        while z < len(arr):\n            if arr[z] < arr[m]:\n                temp = arr[m]\n                arr[m] = arr[z]\n                arr[z] = temp\n            z += 1\n        m += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Problem Description: Write a Python program to sort an array in ascending order using bubble sort.\n   Solution:\n   ```\n   def bubble_sort(arr):\n       n = len(arr)\n       for i in range(n):\n           for j in range(0, n-i-1):\n               if arr[j] > arr[j+1]:\n                   arr[j], arr[j+1] = arr[j+1], arr[j]\n       return arr\n   ```\n\n2. Problem Description: Write a Python program to find the maximum element in an array.\n   Solution:\n   ```\n   def find_max(arr):\n       max_val = arr[0]\n       for i in range(1, len(arr)):\n           if arr[i] > max_val:\n               max_val = arr[i]\n       return max_val\n   ```\n\n3. Problem Description: Write a Python program to calculate the sum of elements in an array.\n   Solution:\n   ```\n   def calculate_sum(arr):\n       total = 0\n       for num in arr:\n           total += num\n       return total\n   ```\n\nTherefore, the final answer is:  'm_value = min(arr[0:m])'."}, {"role": "user", "content": "def selection_sort(arr):\n    m = 0\n    while m <= len(arr) - 1:\n        z = m + 1\n        while z <= len(arr) - 1:\n            if arr[z] < arr[m]:\n                temp = arr[m]\n                arr[m] = arr[z]\n                arr[z] = temp\n            z += 1\n        m += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Problem Description: Write a Python program to sort an array in descending order using selection sort.\n   Solution:\n   ```\n   def selection_sort_desc(arr):\n       m = 0\n       while m <= len(arr) - 1:\n           z = m + 1\n           while z <= len(arr) - 1:\n               if arr[z] > arr[m]:\n                   temp = arr[m]\n                   arr[m] = arr[z]\n                   arr[z] = temp\n               z += 1\n           m += 1\n       return arr\n   ```\n\n2. Problem Description: Write a Python program to find the minimum element in an array.\n   Solution:\n   ```\n   def find_min(arr):\n       min_val = arr[0]\n       for i in range(1, len(arr)):\n           if arr[i] < min_val:\n               min_val = arr[i]\n       return min_val\n   ```\n\n3. Problem Description: Write a Python program to check if an array is sorted in non-decreasing order.\n   Solution:\n   ```\n   def is_sorted(arr):\n       for i in range(1, len(arr)):\n           if arr[i] < arr[i-1]:\n               return False\n       return True\n   ```\n\nTherefore, the final answer is: 'm_value = min(arr[m:])'."}]