[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    h = 0\n    while h < len(arr):\n        z = h + 1\n        while z < len(arr):\n            if arr[z] < arr[h]:\n                temp = arr[h]\n                arr[h] = arr[z]\n                arr[z] = temp\n            z += 1\n        h += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem 1**:\n   - **Description**: Write a Python program to find the maximum element from an array using a loop.\n   - **Solution**:\n     ```python\n     def find_max(arr):\n         max_value = arr[0]\n         i = 1\n         while i < len(arr):\n             if arr[i] > max_value:\n                 max_value = arr[i]\n             i += 1\n         return max_value\n     ```\n\n2. **Problem 2**:\n   - **Description**: Write a Python program to calculate the sum of elements in an array using a loop.\n   - **Solution**:\n     ```python\n     def calculate_sum(arr):\n         total_value = 0\n         i = 0\n         while i < len(arr):\n             total_value += arr[i]\n             i += 1\n         return total_value\n     ```\n\n3. **Problem 3**:\n   - **Description**: Write a Python program to check if all elements in an array are positive using a loop.\n   - **Solution**:\n     ```python\n     def check_positive(arr):\n         all_positive = True\n         i = 0\n         while i < len(arr):\n             if arr[i] <= 0:\n                 all_positive = False\n                 break\n             i += 1\n         return all_positive\n     ```\n\nTherefore, the final answer is: \n'z_value = fun(arr[z]->arr[z])'."}, {"role": "user", "content": "def selection_sort(arr):\n    h = 0\n    while h <= len(arr) - 1:\n        z = h + 1\n        while z <= len(arr) - 1:\n            if arr[z] < arr[h]:\n                temp = arr[h]\n                arr[h] = arr[z]\n                arr[z] = temp\n            z += 1\n        h += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem 1**:\n   - **Description**: Write a Python program to find the minimum element from an array using a loop.\n   - **Solution**:\n     ```python\n     def find_min(arr):\n         min_value = arr[0]\n         i = 1\n         while i < len(arr):\n             if arr[i] < min_value:\n                 min_value = arr[i]\n             i += 1\n         return min_value\n     ```\n\n2. **Problem 2**:\n   - **Description**: Write a Python program to count the occurrences of a specific element in an array using a loop.\n   - **Solution**:\n     ```python\n     def count_occurrences(arr, target):\n         count = 0\n         i = 0\n         while i < len(arr):\n             if arr[i] == target:\n                 count += 1\n             i += 1\n         return count\n     ```\n\n3. **Problem 3**:\n   - **Description**: Write a Python program to reverse an array in-place using a loop.\n   - **Solution**:\n     ```python\n     def reverse_array(arr):\n         start = 0\n         end = len(arr) - 1\n         while start < end:\n             temp = arr[start]\n             arr[start] = arr[end]\n             arr[end] = temp\n             start += 1\n             end -= 1\n         return arr\n     ```\n\nTherefore, the final answer is: \n'z_value = fun(arr[z]->arr[z])'."}]