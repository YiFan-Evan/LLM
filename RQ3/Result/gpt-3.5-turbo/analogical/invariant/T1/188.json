[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    i = 0\n    while i < len(arr):\n        z = i + 1\n        while z < len(arr):\n            if arr[z] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[z]\n                arr[z] = temp\n            z += 1\n        i += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Problem: Modify the selection sort algorithm so that it sorts the array in descending order.\n   Solution: In the inner loop, change the comparison condition from \"arr[z] < arr[i]\" to \"arr[z] > arr[i]\".\n\n2. Problem: Implement a function that finds the k-th smallest element in an array using selection sort.\n   Solution: After sorting the array using selection sort, return the element at index k-1.\n\n3. Problem: Modify the selection sort algorithm so that it sorts only a specific range of elements in the array.\n   Solution: Instead of initializing i as 0, start i at the beginning of the specific range, and adjust the termination condition accordingly.\n\nTherefore, the final answer is: 'i_value = i'."}, {"role": "user", "content": "def selection_sort(arr):\n    i = 0\n    while i <= len(arr) - 1:\n        z = i + 1\n        while z <= len(arr) - 1:\n            if arr[z] < arr[i]:\n                temp = arr[i]\n                arr[i] = arr[z]\n                arr[z] = temp\n            z += 1\n        i += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. Problem: Write a Python program to find the index of the maximum element in an array.\n   Solution: Use a loop to iterate over the array and update a variable to store the index of the maximum element.\n\n2. Problem: Implement a function that calculates the sum of all elements in an array.\n   Solution: Initialize a variable to store the sum, and iterate over the array to add each element to the sum.\n\n3. Problem: Modify the selection_sort function to sort the array in non-decreasing order, breaking ties by preferring the earlier element.\n   Solution: Update the condition in the if statement to compare values using \"<=\" instead of just \"<\".\n\nTherefore, the final answer is: 'i_value = i'."}]