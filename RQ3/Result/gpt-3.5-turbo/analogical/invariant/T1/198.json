[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    s = 0\n    while s < len(arr):\n        z = s + 1\n        while z < len(arr):\n            if arr[z] < arr[s]:\n                temp = arr[s]\n                arr[s] = arr[z]\n                arr[z] = temp\n            z += 1\n        s += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem 1**: \n   - **Description**: You are given an array of integers, and the program sorts this array in non-decreasing order using the selection sort algorithm.\n   - **Input**: `[5, 2, 4, 6, 1, 3]`\n   - **Output**: `[1, 2, 3, 4, 5, 6]`\n\n2. **Problem 2**: \n   - **Description**: You are given an array of characters, and the program sorts this array in non-decreasing order using the selection sort algorithm.\n   - **Input**: `['d', 'a', 'c', 'f', 'b', 'e']`\n   - **Output**: `['a', 'b', 'c', 'd', 'e', 'f']`\n\n3. **Problem 3**: \n   - **Description**: You are given an array of strings, and the program sorts this array in non-decreasing order using the selection sort algorithm.\n   - **Input**: `[\"banana\", \"apple\", \"kiwi\", \"orange\", \"grape\"]`\n   - **Output**: `[\"apple\", \"banana\", \"grape\", \"kiwi\", \"orange\"]`\n\n**Loop Invariant**:\nAt the start of the i-th iteration of the outer loop, the subarray `arr[0:s]` is sorted in non-decreasing order.\n\nTherefore, the final answer is: At the end of the program, the array `arr` is sorted in non-decreasing order."}, {"role": "user", "content": "def selection_sort(arr):\n    s = 0\n    while s <= len(arr) - 1:\n        z = s + 1\n        while z <= len(arr) - 1:\n            if arr[z] < arr[s]:\n                temp = arr[s]\n                arr[s] = arr[z]\n                arr[z] = temp\n            z += 1\n        s += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem 1**: \n   - **Description**: You are given an array of integers, and the program sorts this array in non-decreasing order using the selection sort algorithm.\n   - **Input**: `[5, 2, 4, 6, 1, 3]`\n   - **Output**: `[1, 2, 3, 4, 5, 6]`\n\n2. **Problem 2**: \n   - **Description**: You are given an array of characters, and the program sorts this array in non-decreasing order using the selection sort algorithm.\n   - **Input**: `['d', 'a', 'c', 'f', 'b', 'e']`\n   - **Output**: `['a', 'b', 'c', 'd', 'e', 'f']`\n\n3. **Problem 3**: \n   - **Description**: You are given an array of strings, and the program sorts this array in non-decreasing order using the selection sort algorithm.\n   - **Input**: `[\"banana\", \"apple\", \"kiwi\", \"orange\", \"grape\"]`\n   - **Output**: `[\"apple\", \"banana\", \"grape\", \"kiwi\", \"orange\"]`\n\n**Loop Invariant**:\nAt the start of the i-th iteration of the outer loop, the smallest i elements in `arr[0:i]` are in their correct positions. \n\nTherefore, the final answer is: At the end of the program, the array `arr` is sorted in non-decreasing order."}]