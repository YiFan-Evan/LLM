[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_last(arr):\n    last_value = arr[0]\n    g = 0\n    while g < len(arr):\n        last_value = arr[g]\n        g += 1\n    return last_value"}, {"role": "assistant", "content": "1. **Problem 1**: \n**Description**: Write a Python program that finds and returns the maximum value in a given list.\n**Program**:\n```python\ndef find_max(arr):\n    max_value = arr[0]\n    i = 1\n    while i < len(arr):\n        if arr[i] > max_value:\n            max_value = arr[i]\n        i += 1\n    return max_value\n```\n**Solution**: Loop invariant: `max_value = max(arr[0] -> arr[i-1])`.\n\n2. **Problem 2**:  \n**Description**: Write a Python program that finds and returns the sum of all elements in a given list.\n**Program**:\n```python\ndef find_sum(arr):\n    total = 0\n    i = 0\n    while i < len(arr):\n        total += arr[i]\n        i += 1\n    return total\n```\n**Solution**: Loop invariant: `total = sum(arr[0] -> arr[i-1])`.\n\n3. **Problem 3**: \n**Description**: Write a Python program that counts and returns the number of even numbers in the given list.\n**Program**:\n```python\ndef count_even(arr):\n    count = 0\n    i = 0\n    while i < len(arr):\n        if arr[i] % 2 == 0:\n            count += 1\n        i += 1\n    return count\n```\n**Solution**: Loop invariant: `count = number of even elements in arr[0] -> arr[i-1]`.\n\n**Therefore, the final answer is:** `last_value = arr[0 -> g-1]`."}, {"role": "user", "content": "def give_last(arr):\n    last_value = arr[0]\n    g = 0\n    while g <= len(arr) - 1:\n        last_value = arr[g]\n        g += 1\n    return last_value"}, {"role": "assistant", "content": "1. **Problem 1**: \n**Description**: Write a Python program that finds and returns the minimum value in a given list.\n**Program**:\n```python\ndef find_min(arr):\n    min_value = arr[0]\n    i = 1\n    while i < len(arr):\n        if arr[i] < min_value:\n            min_value = arr[i]\n        i += 1\n    return min_value\n```\n**Solution**: Loop invariant: `min_value = min(arr[0] -> arr[i-1])`.\n\n2. **Problem 2**:  \n**Description**: Write a Python program that calculates and returns the average of all elements in a given list.\n**Program**:\n```python\ndef find_average(arr):\n    sum_total = 0\n    i = 0\n    while i < len(arr):\n        sum_total += arr[i]\n        i += 1\n    average = sum_total / len(arr)\n    return average\n```\n**Solution**: Loop invariant: `sum_total = sum(arr[0] -> arr[i-1])`.\n\n3. **Problem 3**: \n**Description**: Write a Python program that checks and returns True if the list is sorted in non-decreasing order, otherwise returns False.\n**Program**:\n```python\ndef is_sorted(arr):\n    i = 0\n    while i < len(arr)-1:\n        if arr[i] > arr[i+1]:\n            return False\n        i += 1\n    return True\n```\n**Solution**: Loop invariant: `arr[0 -> i-1] is sorted in non-decreasing order`.\n\n**Therefore, the final answer is:** `last_value = arr[0 -> g]`."}]