[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    b = 0\n    while b < len(arr):\n        sum_value += arr[b]\n        b += 1\n    return sum_value"}, {"role": "assistant", "content": "1. Problem: Write a Python program to find the maximum element in the array.\n\n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    b = 0\n    while b < len(arr):\n        if arr[b] > max_value:\n            max_value = arr[b]\n        b += 1\n    return max_value\n```\n\n2. Problem: Write a Python program to calculate the product of all elements in the array.\n\n```python\ndef calculate_product(arr):\n    product_value = 1\n    b = 0\n    while b < len(arr):\n        product_value *= arr[b]\n        b += 1\n    return product_value\n```\n\n3. Problem: Write a Python program to count the number of positive elements in the array.\n\n```python\ndef count_positive(arr):\n    count_value = 0\n    b = 0\n    while b < len(arr):\n        if arr[b] > 0:\n            count_value += 1\n        b += 1\n    return count_value\n```\n\nTherefore, the final answer is: \n\n```python\nTherefore, the final answer is: 'b = b and sum_value = sum(arr[0:b])'\n```"}, {"role": "user", "content": "def give_sum(arr):\n    sum_value = 0\n    b = 0\n    while b <= len(arr) - 1:\n        sum_value += arr[b]\n        b += 1\n    return sum_value"}, {"role": "assistant", "content": "1. Problem: Write a Python program to find the minimum element in the array.\n\n```python\ndef find_min(arr):\n    min_value = float('inf')\n    b = 0\n    while b <= len(arr) - 1:\n        if arr[b] < min_value:\n            min_value = arr[b]\n        b += 1\n    return min_value\n```\n\n2. Problem: Write a Python program to calculate the average of all elements in the array.\n\n```python\ndef calculate_average(arr):\n    sum_value = 0\n    b = 0\n    while b <= len(arr) - 1:\n        sum_value += arr[b]\n        b += 1\n    return sum_value / len(arr)\n```\n\n3. Problem: Write a Python program to determine if the array is sorted in non-decreasing order.\n\n```python\ndef is_sorted(arr):\n    sorted_value = True\n    b = 1\n    while b <= len(arr) - 1:\n        if arr[b] < arr[b-1]:\n            sorted_value = False\n            break\n        b += 1\n    return sorted_value\n```\n\nTherefore, the final answer is: \n\n```python\nTherefore, the final answer is: 'b = b and sum_value = sum(arr[0:b])'\n```"}]