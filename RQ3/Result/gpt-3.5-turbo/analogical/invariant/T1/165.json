[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def insertion_sort(arr):\n    f = 0\n    while f < len(arr):\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        f += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem**: Write a Python program to sort an array in descending order using insertion sort algorithm.\n   - **Solution**: The program is similar to the given code, but the comparison in the inner loop is inverted.\n\n2. **Problem**: Write a Python program to find the maximum element in an array using insertion sort algorithm.\n   - **Solution**: Modify the inner loop to keep track of the maximum value and its index.\n\n3. **Problem**: Write a Python program to find the k-th smallest element in an array using insertion sort algorithm.\n   - **Solution**: Update the inner loop to stop when the k-th smallest element is found and return it.\n\nTherefore, the final answer is: \"z_value = i >= z >= 0 and forall(k)(0 <= k < z => arr[k] <= arr[z])\"."}, {"role": "user", "content": "def insertion_sort(arr):\n    f = 0\n    while f <= len(arr) - 1:\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        f += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem**: Write a Python program to sort an array in ascending order using selection sort algorithm.\n   - **Solution**: Change the sorting algorithm to selection sort in the given code.\n  \n2. **Problem**: Write a Python program to find the second smallest element in an array using insertion sort algorithm.\n   - **Solution**: Alter the inner loop to keep track of the second smallest element after finding the first smallest.\n\n3. **Problem**: Write a Python program to find the frequency of occurrence of each element in an array using insertion sort algorithm.\n   - **Solution**: Update the code to keep count of occurrences of elements as they are sorted.\n\nTherefore, the final answer is: \"z_value = i >= z >= 0 and forall(k)(0 <= k < len(arr) and k != z => arr[k] >= arr[z])\"."}]