[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def selection_sort(arr):\n    t = 0\n    while t < len(arr):\n        z = t + 1\n        while z < len(arr):\n            if arr[z] < arr[t]:\n                temp = arr[t]\n                arr[t] = arr[z]\n                arr[z] = temp\n            z += 1\n        t += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem**: Write a Python program where a loop updates the maximum value in an array of integers.\n   - **Input**: An array of integers.\n   - **Output**: The array with the maximum value located at the end.\n   - **Solution**:\n     ```python\n     def update_max(arr):\n         i = 0\n         while i < len(arr):\n             j = i + 1\n             while j < len(arr):\n                 if arr[j] > arr[i]:\n                     temp = arr[i]\n                     arr[i] = arr[j]\n                     arr[j] = temp\n                 j += 1\n             i + = 1\n         return arr\n     ```\n\n2. **Problem**: Create a Python program that finds the index of the smallest element in an array and swaps it with the first element.\n   - **Input**: An array of integers.\n   - **Output**: The array with the smallest element at the beginning.\n   - **Solution**:\n     ```python\n     def swap_smallest_first(arr):\n         i = 0\n         while i < len(arr):\n             min_index = i\n             j = i + 1\n             while j < len(arr):\n                 if arr[j] < arr[min_index]:\n                     min_index = j\n                 j += 1\n             temp = arr[i]\n             arr[i] = arr[min_index]\n             arr[min_index] = temp\n             i += 1\n         return arr\n     ```\n\n3. **Problem**: Write a Python program that reverses an array in place using a loop.\n   - **Input**: An array.\n   - **Output**: The array with elements reversed.\n   - **Solution**:\n     ```python\n     def reverse_array(arr):\n         i = 0\n         j = len(arr) - 1\n         while i < j:\n             temp = arr[i]\n             arr[i] = arr[j]\n             arr[j] = temp\n             i += 1\n             j -= 1\n         return arr\n     ```\n\nTherefore, the final answer is: 't_value = 0<=t<=len(arr)'"}, {"role": "user", "content": "def selection_sort(arr):\n    t = 0\n    while t <= len(arr) - 1:\n        z = t + 1\n        while z <= len(arr) - 1:\n            if arr[z] < arr[t]:\n                temp = arr[t]\n                arr[t] = arr[z]\n                arr[z] = temp\n            z += 1\n        t += 1\n    return arr"}, {"role": "assistant", "content": "1. **Problem**: Create a Python program that sorts an array of characters in non-decreasing order.\n   - **Input**: An array of characters.\n   - **Output**: The input array with characters sorted in non-decreasing order.\n   - **Solution**:\n     ```python\n     def sort_chars(arr):\n         i = 0\n         while i < len(arr):\n             j = i + 1\n             while j < len(arr):\n                 if arr[j] < arr[i]:\n                     temp = arr[i]\n                     arr[i] = arr[j]\n                     arr[j] = temp\n                 j += 1\n             i += 1\n         return arr\n     ```\n\n2. **Problem**: Write a Python program that finds the number of distinct elements in an array.\n   - **Input**: An array of integers.\n   - **Output**: The count of distinct elements in the input array.\n   - **Solution**:\n     ```python\n     def count_distinct(arr):\n         distinct_count = 0\n         i = 0\n         while i < len(arr):\n             is_distinct = True\n             j = 0\n             while j < i:\n                 if arr[i] == arr[j]:\n                     is_distinct = False\n                     break\n                 j += 1\n             if is_distinct:\n                 distinct_count += 1\n             i += 1\n         return distinct_count\n     ```\n\n3. **Problem**: Create a Python program that computes the product of all elements in an array.\n   - **Input**: An array of integers.\n   - **Output**: The product of all elements in the input array.\n   - **Solution**:\n     ```python\n     def product_elements(arr):\n         product = 1\n         i = 0\n         while i < len(arr):\n             product *= arr[i]\n             i += 1\n         return product\n     ```\n\nTherefore, the final answer is: 't_value = 0<=t<=len(arr)'"}]