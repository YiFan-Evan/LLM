[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def give_count(arr, target):\n    count_value = 0\n    q = 0\n    while q < len(arr):\n        if arr[q] == target:\n            count_value += 1\n        q += 1\n    return count_value"}, {"role": "assistant", "content": "1. Problem: Write a function that calculates the sum of all elements in a given array.\n\n```python\ndef sum_elements(arr):\n    sum_value = 0\n    q = 0\n    while q < len(arr):\n        sum_value += arr[q]\n        q += 1\n    return sum_value\n```\n\n2. Problem: Write a function that finds the maximum element in a given array.\n\n```python\ndef find_max(arr):\n    max_value = float('-inf')\n    q = 0\n    while q < len(arr):\n        if arr[q] > max_value:\n            max_value = arr[q]\n        q += 1\n    return max_value\n```\n\n3. Problem: Write a function that checks if a given array is sorted in non-decreasing order.\n\n```python\ndef is_sorted(arr):\n    is_sorted_value = True\n    q = 0\n    while q < len(arr) - 1:\n        if arr[q] > arr[q + 1]:\n            is_sorted_value = False\n            break\n        q += 1\n    return is_sorted_value\n```\n\nTherefore, the final answer is: `count_value = sum(arr[0:q] == target)`"}, {"role": "user", "content": "def give_count(arr, target):\n    count_value = 0\n    q = 0\n    while q <= len(arr) - 1:\n        if arr[q] == target:\n            count_value += 1\n        q += 1\n    return count_value"}, {"role": "assistant", "content": "1. Problem: Write a function that calculates the product of all elements in a given array.\n\n```python\ndef product_elements(arr):\n    product_value = 1\n    q = 0\n    while q < len(arr):\n        product_value *= arr[q]\n        q += 1\n    return product_value\n```\n\n2. Problem: Write a function that finds the minimum element in a given array.\n\n```python\ndef find_min(arr):\n    min_value = float('inf')\n    q = 0\n    while q < len(arr):\n        if arr[q] < min_value:\n            min_value = arr[q]\n        q += 1\n    return min_value\n```\n\n3. Problem: Write a function that checks if a given array contains a specific value.\n\n```python\ndef contains_value(arr, value):\n    contains_value = False\n    q = 0\n    while q < len(arr):\n        if arr[q] == value:\n            contains_value = True\n            break\n        q += 1\n    return contains_value\n```\n\nTherefore, the final answer is: `count_value = sum(arr[0:q] == target)`"}]