[{"role": "system", "content": "In the following questions, I will provide a target Python program code. The code is a program containing a loop, and the purpose of the code is indicated by its function name. Please provide a loop invariant for the i-th iteration of the loop to prove the partial correctness of the program. The loop invariant should be written in the form 'xxx_value = fun(arr[xxx]->arr[xxx])'. (Please note that your answer should only contain statements in the specified format.)(For each problem, you need to first present three related but not identical problems, along with a description of each problem and its solution. Finally, provide the answer to the original problem in the form of \"Therefore, the final answer is: \".)"}, {"role": "user", "content": "def insertion_sort(arr):\n    i = 0\n    while i < len(arr):\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        i += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem**: Given a list of integers, sort the list in ascending order using the selection sort algorithm.\n**Initial solution**: Use the selection sort algorithm with two nested loops to find the minimum value and swap it with the current index.\n2. **Problem**: Given a list of integers, sort the list in ascending order using the bubble sort algorithm.\n**Initial solution**: Use the bubble sort algorithm with two nested loops to compare adjacent elements and swap if they are in the wrong order.\n3. **Problem**: Given a list of integers, sort the list in ascending order using the merge sort algorithm.\n**Initial solution**: Implement the merge sort algorithm recursively to divide the list into halves and merge them in sorted order.\n\nTherefore, the final answer is: \"j_value = fun(arr[0]->arr[i])\"."}, {"role": "user", "content": "def insertion_sort(arr):\n    i = 0\n    while i <= len(arr) - 1:\n        z = i\n        while z > 0 and arr[z - 1] > arr[z]:\n            temp = arr[z]\n            arr[z] = arr[z - 1]\n            arr[z - 1] = temp\n            z -= 1\n        i += 1\n    return arr"}, {"role": "assistant", "content": "Three related problems:\n\n1. **Problem**: Given a list of integers, sort the list in descending order using the insertion sort algorithm.\n**Initial solution**: Use the insertion sort algorithm with two nested loops to insert the current element in the correct position from right to left.\n2. **Problem**: Given a list of integers, find the k-th smallest element in the list using the selection algorithm.\n**Initial solution**: Implement the selection algorithm to find the k-th smallest element in the list by repeatedly selecting the next smallest element.\n3. **Problem**: Given a list of integers, check if the list is sorted in non-decreasing order.\n**Initial solution**: Write a function that iterates through the list and checks if each element is less than or equal to the next element.\n\nTherefore, the final answer is: \"z_value = fun(arr[0]->arr[i])\"."}]